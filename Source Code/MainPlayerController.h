// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/PlayerController.h"
#include "MainPlayerController.generated.h"

/**
 * 
 */
UCLASS()
class MYPROJECT_API AMainPlayerController : public APlayerController
{
	GENERATED_BODY()
	// This will be for the player HUD
	// When you start using programming to do things with the HUD we'll need to include a lot more things in our header files
	// Thankfully there's a special file we can work with to help
	// In our MyProject.Build.CS file need to add some things to the AddRange() functions. In the top one we need to add UMG
	// And in the bottom we need "Slate" and "SlateCore"

public: 
	// We can make the HUD layout in the engine itself, but to actually overlay it on the screen we'll need to do the functionality here

	/** Reference to the UMG asset in the editor */
	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "Widgets")
	TSubclassOf<class UUserWidget> HUDOverlayAsset; // Reference to our HUD asset that we made
	
	/** Variable to hold the widget after creating it */
	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "Widgets")
	UUserWidget* HUDOverlay;

	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "Widgets")
	TSubclassOf<UUserWidget> WEnemyHealthBar;

	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = "Widgets")
	UUserWidget* EnemyHealthBar;

	/** Pause menu logic */
	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "Widgets")
	TSubclassOf<UUserWidget> WPauseMenu;

	UPROPERTY(VisibleAnywhere, BlueprintReadWrite, Category = "Widgets")
	UUserWidget* PauseMenu;

	bool bPauseMenuVisible;

	UFUNCTION(BlueprintNativeEvent, BlueprintCallable, Category = "HUD") // BlueprintNative events have some implementation in C++ and some in Blueprints, so they're hybrids of sorts
	void DisplayPauseMenu(); // Remember when we use the BlueprintNative event macro there's a different version of the function that we call and implement
	// Basically an autogenerated function, but with an underscore and with implementation added on

	UFUNCTION(BlueprintNativeEvent, BlueprintCallable, Category = "HUD")
	void RemovePauseMenu();

	void TogglePauseMenu();

	bool bEnemyHealthBarVisible;

	void DisplayEnemyHealthBar();
	void RemoveEnemyHealthBar();

	FVector EnemyLocation;

	void GameModeOnly();

private: 
	virtual void BeginPlay() override;

	virtual void Tick(float DeltaTime) override;

};
